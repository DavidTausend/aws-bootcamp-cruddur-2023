AWSTemplateFormatVersion: 2010-09-09
Description: |
  The base networking componets for our stack:
  - VPC
    - Sets DNS hostnames for EC2 instances
    - Only IPV4, IPV6 is disabled
  - InternetGateway
  - Route Table
    - Route to the IGW
    - Route to Local
  - 6 Subnets Explicity Associated to Route table
    - 3 Public Subnets numbered 1 to 3
    - 3 Private Subnets numbered 1 to 3


Parameters:
  VpcCidrBlock: 
      Type: String
      Default: 10.0.0.0/16
  Az1:
    Type: AWS::EC2::AvailabilityZone::Name
    Default: eu-central-1a
  SubnetCidrBlocks: 
    Description: "Comma-delimited list of CIDR blocks for our private public subnets"
    Type: CommaDelimitedList
    Default:  >
      10.0.0.0/24, 
      10.0.4.0/24, 
      10.0.8.0/24, 
      10.0.12.0/24,
      10.0.16.0/24,
      10.0.20.0/24
  Az2:
    Type: AWS::EC2::AvailabilityZone::Name
    Default: eu-central-1b
  Az3:
    Type: AWS::EC2::AvailabilityZone::Name
    Default: eu-central-1c
# VPC
Resources:
  VPC:
  # https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpc.html
    Type: AWS::EC2::VPC
    Properties: 
      CidrBlock: !Ref VpcCidrBlock
      EnableDnsHostnames: true
      EnableDnsSupport: true
      InstanceTenancy: default
      Tags:
        - Key: Name
          Value: !Sub "${AWS::StackName}VPC"
  # IGW
  IGW:
  # https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-internetgateway.html
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: !Sub "${AWS::StackName}IGW"
  AttachIGW:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref IGW
  # Route tables
  RouteTable:
    # https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-routetable.html
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub "${AWS::StackName}RT"
  # Route
  RouteToIGW:
    # https://docs.aws.amazon.com/de_de/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-route.html
    Type: AWS::EC2::Route
    DependsOn: AttachIGW
    Properties:
       RouteTableId: !Ref RouteTable
       GatewayId: !Ref IGW
       DestinationCidrBlock: 0.0.0.0/0
  SubnetPubA:
  # https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnet.html
     Type: AWS::EC2::Subnet
     Properties:
       AvailabilityZone: !Ref Az1
       CidrBlock: !Select [0, !Ref SubnetCidrBlocks]
       EnableDns64: false
       MapPublicIpOnLaunch: true #public subnet
       VpcId: !Ref VPC
       Tags: 
        - Key: Name
          Value: !Sub "${AWS::StackName}SubnetPubA"
  SubnetPubB:
  # https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnet.html
     Type: AWS::EC2::Subnet
     Properties:
       AvailabilityZone: !Ref Az2
       CidrBlock: !Select [1, !Ref SubnetCidrBlocks]
       EnableDns64: false
       MapPublicIpOnLaunch: true #public subnet
       VpcId: !Ref VPC
       Tags: 
        - Key: Name
          Value: !Sub "${AWS::StackName}SubnetPubB"
  SubnetPubC:
  # https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnet.html
     Type: AWS::EC2::Subnet
     Properties:
       AvailabilityZone: !Ref Az3
       CidrBlock: !Select [2, !Ref SubnetCidrBlocks]
       EnableDns64: false
       MapPublicIpOnLaunch: true #public subnet
       VpcId: !Ref VPC
       Tags: 
        - Key: Name
          Value: !Sub "${AWS::StackName}SubnetPubC"
  SubnetPrivA:
  # https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnet.html
     Type: AWS::EC2::Subnet
     Properties:
       AvailabilityZone: !Ref Az1
       CidrBlock: !Select [3, !Ref SubnetCidrBlocks]
       EnableDns64: false
       MapPublicIpOnLaunch: false #public subnet
       VpcId: !Ref VPC
       Tags: 
        - Key: Name
          Value: !Sub "${AWS::StackName}SubnetPrivA"
  SubnetPrivB:
  # https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnet.html
     Type: AWS::EC2::Subnet
     Properties:
       AvailabilityZone: !Ref Az2
       CidrBlock: !Select [4, !Ref SubnetCidrBlocks]
       EnableDns64: false
       MapPublicIpOnLaunch: false #public subnet
       VpcId: !Ref VPC
       Tags: 
        - Key: Name
          Value: !Sub "${AWS::StackName}SubnetPrivB"
  SubnetPrivC:
  # https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnet.html
     Type: AWS::EC2::Subnet
     Properties:
       AvailabilityZone: !Ref Az3
       CidrBlock: !Select [5, !Ref SubnetCidrBlocks]
       EnableDns64: false
       MapPublicIpOnLaunch: false #public subnet
       VpcId: !Ref VPC
       Tags: 
        - Key: Name
          Value: !Sub "${AWS::StackName}SubnetPrivC"
  SubnetPubARTAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref SubnetPubA
      RouteTableId: !Ref RouteTable
  SubnetPubBRTAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref SubnetPubB
      RouteTableId: !Ref RouteTable
  SubnetPubCRTAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref SubnetPubC
      RouteTableId: !Ref RouteTable
  SubnetPrivARTAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref SubnetPrivA
      RouteTableId: !Ref RouteTable
  SubnetPrivBRTAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref SubnetPrivB
      RouteTableId: !Ref RouteTable
  SubnetPrivCRTAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref SubnetPrivC
      RouteTableId: !Ref RouteTable
Outputs:
  VpcId:
    Value: !Ref VPC
    Export:
      Name: !Sub "${AWS::StackName}VpcId"
  VpcCidrBlock:
    Value: !GetAtt VPC.CidrBlock
    Export:
      Name: !Sub "${AWS::StackName}VpcCidrBlock"
  SubnetCidrBlocks:
    Value: !Join [",", !Ref SubnetCidrBlocks]
    Export:
      Name: !Sub "${AWS::StackName}SubnetCidrBlocks"
  SubnetIds:
    Value: !Join 
      - ","
      - - !Ref SubnetPubA
        - !Ref SubnetPubB
        - !Ref SubnetPubC
        - !Ref SubnetPrivA
        - !Ref SubnetPrivB
        - !Ref SubnetPrivC
    Export:
      Name: !Sub "${AWS::StackName}SubnetIds"
  AvailabilityZones:
    Value: !Join 
      - ","
      - - !Ref Az1
        - !Ref Az2
        - !Ref Az3
    Export:
      Name: !Sub "${AWS::StackName}AvailabilityZones"